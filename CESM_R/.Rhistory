barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "For all runs",
xlab = expression( * mu ~ ) )
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "For all runs",
xlab = expression("" * mu ~ "") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)], las=1, at=seq(0.7,27, 1.21), cex=0.8)
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "",
xlab = expression("" * mu ~ "(including 5 and 10 day runs)") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)], las=1, at=seq(0.7,27, 1.21), cex=0.8)
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "",
xlab = expression("" * mu ~ "(Including 5 and 10 day runs)") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)], las=1, at=seq(0.7,27, 1.21), cex=0.8)
axis(1, at=seq(0,25,5), labels = TRUE )
axis(1, at=seq(0,26,2), labels = TRUE )
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "",
xlab = expression("" * mu ~ "(Including 5 and 10 day runs)") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
las=1, at=seq(0.7,27, 1.21), cex=0.8)
axis(1, at=seq(0,26,2), labels = TRUE )
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", sub = "", xaxt="n"
xlab = expression("" * mu ~ "(Including 5 and 10 day runs)") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
las=1, at=seq(0.7,27, 1.21), cex=0.8)
barplot(wallclock_prop[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
horiz=TRUE, col = c("#B1DDF0", "#107E93"),
main = "Timer differences", xaxt="n",
xlab = expression("" * mu ~ "(Including 5 and 10 day runs)") )
mtext(side = 2, text = func_names[which( wallclock_prop > wallclock_lim_pos | wallclock_prop < wallclock_lim_neg)],
las=1, at=seq(0.7,27, 1.21), cex=0.8)
axis(1, at=seq(0,26,2), labels = TRUE )
# Visualize profiling data
rm(list=ls())
source("./CESM_prof.R")
source("./plot_functions.R")
# get data and save in data frames
prof_data <- get_data()
prof_tagged_df <- prof_data[[2]]
prof_not_df <- prof_data[[1]]
ndays5_tag <- subset(prof_tagged_df, NDays == 5 )
ndays10_tag <- subset(prof_tagged_df, NDays == 10)
ndays5_notag <- subset(prof_not_df, NDays == 5 )
ndays10_notag <- subset(prof_not_df, NDays == 10)
#### PLOTS ####-------------------------------------------------------------------------
saveVar <- FALSE
# Set isTagged to TRUE for tagged title
# Total duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, isTagged=TRUE, "Total Duration", isSaved=saveVar, "5vs10_dur_tot_tag")
# Init duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_init, ndays10_tag$Cores,
ndays10_tag$Dur_init,TRUE, "Initialization Duration", saveVar, "5vs10_dur_init_tag")
# Visualize profiling data
rm(list=ls())
source("./CESM_prof.R")
source("./plot_functions.R")
# get data and save in data frames
prof_data <- get_data()
prof_tagged_df <- prof_data[[2]]
prof_not_df <- prof_data[[1]]
ndays5_tag <- subset(prof_tagged_df, NDays == 5 )
ndays10_tag <- subset(prof_tagged_df, NDays == 10)
ndays5_notag <- subset(prof_not_df, NDays == 5 )
ndays10_notag <- subset(prof_not_df, NDays == 10)
#### PLOTS ####-------------------------------------------------------------------------
saveVar <- FALSE
# Set isTagged to TRUE for tagged title
# Total duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, isTagged=TRUE, "Total Duration", isSaved=saveVar, "5vs10_dur_tot_tag")
# Init duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_init, ndays10_tag$Cores,
ndays10_tag$Dur_init,TRUE, "Initialization Duration", saveVar, "5vs10_dur_init_tag")
# Run duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_run, ndays10_tag$Cores,
ndays10_tag$Dur_run, TRUE, "Run Duration",  saveVar, "5vs10_dur_run_tag")
# Fin duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_fin, ndays10_tag$Cores,
ndays10_tag$Dur_fin, TRUE, "Finish Duration",  saveVar, "5vs10_dur_fin_tag")
dev.off()
# reset par
dev.off()
#### PLOTS ####-------------------------------------------------------------------------
saveVar <- FALSE
# Set isTagged to TRUE for tagged title
# Total duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, isTagged=TRUE, "Total Duration", isSaved=saveVar, "5vs10_dur_tot_tag")
# Init duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_init, ndays10_tag$Cores,
ndays10_tag$Dur_init,TRUE, "Initialization Duration", saveVar, "5vs10_dur_init_tag")
# Run duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_run, ndays10_tag$Cores,
ndays10_tag$Dur_run, TRUE, "Run Duration",  saveVar, "5vs10_dur_run_tag")
# Fin duration
plot_5vs10_single(ndays5_tag$Cores, ndays5_tag$Dur_fin, ndays10_tag$Cores,
ndays10_tag$Dur_fin, TRUE, "Finish Duration",  saveVar, "5vs10_dur_fin_tag")
### Throughput and Cost ###--------------------------------------------------------------
# See page 43 of CESM user guide 1.2 for explanation
plot_5vs10_flex(ndays5_tag$Cores, ndays5_tag$Throughput, ndays10_tag$Cores,
ndays10_tag$Throughput, ytext="Simulated_years / day ", isTagged=TRUE, "Throughput", saveVar, "5vs10_troughput_tagged")
# Cost
# The cost is expected to increase if using more cores for CESM
plot_5vs10_flex(ndays5_tag$Cores, ndays5_tag$Cost, ndays10_tag$Cores,
ndays10_tag$Cost, ytext="pe-hrs/simulated_years", isTagged=TRUE, "Cost",  saveVar, "5vs10_cost_tagged")
### Plots both ####--------------------------------------------------------------
saveVar <- FALSE
# Total duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_tot, ndays10_notag$Cores,
ndays10_notag$Dur_tot, ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, "Total Duration", saveVar, "5vs10_dur_tot_both")
# Init duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_init, ndays10_notag$Cores,
ndays10_notag$Dur_init, ndays5_tag$Cores, ndays5_tag$Dur_init, ndays10_tag$Cores,
ndays10_tag$Dur_init, "Initialization Duration",  saveVar, "5vs10_dur_init_both")
# Run duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_run, ndays10_notag$Cores,
ndays10_notag$Dur_run, ndays5_tag$Cores, ndays5_tag$Dur_run, ndays10_tag$Cores,
ndays10_tag$Dur_run, "Run Duration",  saveVar, "5vs10_dur_run_both")
# Fin duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_fin, ndays10_notag$Cores,
ndays10_notag$Dur_fin, ndays5_tag$Cores, ndays5_tag$Dur_fin, ndays10_tag$Cores,
ndays10_tag$Dur_fin, "Finish Duration",  saveVar, "5vs10_dur_fin_both")
# Total duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_tot, ndays10_notag$Cores,
ndays10_notag$Dur_tot, ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, "Total Duration", saveVar, "5vs10_dur_tot_both")
require(splines)
fit_5d_notag <- lm(ndays5_notag$Dur_tot ~ bs(ndays5_notag$Cores, knots = c(28,112,196)), data = ndays5_notag)
fit_5d_notag
points(ndays5_notag$Cores, predict(fit_5d_notag))
points(ndays5_notag$Cores, predict(fit_5d_notag))
# Total duration
plot_5vs10_all(ndays5_notag$Cores, ndays5_notag$Dur_tot, ndays10_notag$Cores,
ndays10_notag$Dur_tot, ndays5_tag$Cores, ndays5_tag$Dur_tot, ndays10_tag$Cores,
ndays10_tag$Dur_tot, "Total Duration", saveVar, "5vs10_dur_tot_both")
points(ndays5_notag$Cores, predict(fit_5d_notag))
smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot)
fit_5d_notag <- lm(ndays5_notag$Dur_tot ~ bs(ndays5_notag$Cores, knots = c(28,112,196)), data = ndays5_notag)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= paste(title, "tagged vs no tags"), xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
#### Fitting ####-----------------------------------------------------------------------------
xarg <- ndays5_notag$Cores
yarg <- ndays5_notag$Dur_tot
xarg2 <- ndays10_notag$Cores
yarg2 <- ndays10_notag$Dur_tot
xarg3 <- ndays5_tag$Cores
yarg3 <- ndays5_tag$Dur_tot
xarg4 <- ndays10_tag$Cores
yarg4 <- ndays10_tag$Dur_tot
fit_5d_notag <- lm(ndays5_notag$Dur_tot ~ bs(ndays5_notag$Cores, knots = c(28,112,196)), data = ndays5_notag)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= paste(title, "tagged vs no tags"), xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
fit_5d_notag <- lm(ndays5_notag$Dur_tot ~ bs(ndays5_notag$Cores, knots = c(28,112,196)), data = ndays5_notag)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags"), xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot)
lines(predict(fit_5d_notag))
predict(fit_5d_notag)
fit_5d_notag <- lm(Dur_tot ~ bs(Cores, knots = c(28,112,196)), data = ndays5_notag)
lines(predict(fit_5d_notag))
yarg
xarg
lines(seq(28,224, 28), predict(fit_5d_notag))
seq(28,224, 28)
lines(c(28, 56, 84, 84, seq(112,224, 28), predict(fit_5d_notag))
lines(c(28, 56, 84, 84, seq(112,224, 28)), predict(fit_5d_notag))
lines(c(28, 56, 84, 84, seq(112,224, 28)), predict(fit_5d_notag))
smoothingSpline <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot)
lines(smoothingSpline)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
smoothingSpline <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot)
lines(smoothingSpline)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot)
lines(sspline_10_not)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, cv=TRUE)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, cv=TRUE)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, cv=TRUE)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, cv=TRUE)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, cv= TRUE)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, cv=TRUE)
lines(sspline_10_not)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, cv=TRUE)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, cv=TRUE)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, cv= TRUE)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, cv=TRUE)
lines(sspline_10_tag)
lines(sspline_5_tag)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=3)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, df=3)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, df=3)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag); lines(sspline_5_tag); lines(sspline_10_not); lines(sspline_5_not)
lines(sspline_10_tag, col="red", lty = 2); lines(sspline_5_tag); lines(sspline_10_not); lines(sspline_5_not)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag, col="red", lty = 2); lines(sspline_5_tag); lines(sspline_10_not); lines(sspline_5_not)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
# spline
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=3)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, df=3)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, df=3)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=6)
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=6)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, df=6)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, df=6)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=6)
lines(sspline_10_tag, col="red", lty = 3);
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=3)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, df=3)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, df=3)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(ndays5_notag$Cores, ndays5_notag$Dur_tot, df=3)
sspline_5_tag <- smooth.spline(ndays5_tag$Cores, ndays5_tag$Dur_tot, df=3)
sspline_10_not <- smooth.spline(ndays10_notag$Cores, ndays10_notag$Dur_tot, df=3)
sspline_10_tag <- smooth.spline(ndays10_tag$Cores, ndays10_tag$Dur_tot, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
### Throughput and Cost ###--------------------------------------------------------------
# See page 43 of CESM user guide 1.2 for explanation
plot_5vs10_flex(ndays5_tag$Cores, ndays5_tag$Throughput, ndays10_tag$Cores,
ndays10_tag$Throughput, ytext="Simulated_years / day ", isTagged=TRUE,
"Throughput", saveVar, "5vs10_troughput_tagged")
plot_5vs10_flex
# Cost
# The cost is expected to increase if using more cores for CESM
plot_5vs10_flex(ndays5_tag$Cores, ndays5_tag$Cost, ndays10_tag$Cores,
ndays10_tag$Cost, ytext="pe-hrs/simulated_years", isTagged=TRUE,
"Cost",  saveVar, "5vs10_cost_tagged")
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Total duration tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
#### Fitting ####-----------------------------------------------------------------------------
xarg <- ndays5_notag$Cores
yarg <- ndays5_notag$Cost
xarg2 <- ndays10_notag$Cores
yarg2 <- ndays10_notag$Cost
xarg3 <- ndays5_tag$Cores
yarg3 <- ndays5_tag$Cost
xarg4 <- ndays10_tag$Cores
yarg4 <- ndays10_tag$Cost
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(xarg, yarg, df=3)
sspline_5_tag <- smooth.spline(xarg3, yarg3, df=3)
sspline_10_not <- smooth.spline(xarg2, yarg2, df=3)
sspline_10_tag <- smooth.spline(xarg4, yarg4, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
grid(nx = c(28,56,84,112,140,168,196, 224), ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = c(28,56,84,112,140,168,196, 224), ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
grid(nx = 6, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
grid(nx = 2, ny = NULL, col = "lightgray", lty = "dotted",
lwd =1, equilogs = TRUE)
abline(v=c(28,56,84,112,140,168,196, 224))
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Duration in seconds", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
abline(v=c(28,56,84,112,140,168,196, 224), col = "lightgray", lty = "dotted",
lwd=1)
abline(h=seq(2000,14000,4000), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topright", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
legend("topleft", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="pe-hrs/simulated_years", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
abline(v=c(28,56,84,112,140,168,196, 224), col = "lightgray", lty = "dotted",
lwd=1)
abline(h=seq(2000,14000,4000), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topleft", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(xarg, yarg, df=3)
sspline_5_tag <- smooth.spline(xarg3, yarg3, df=3)
sspline_10_not <- smooth.spline(xarg2, yarg2, df=3)
sspline_10_tag <- smooth.spline(xarg4, yarg4, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
ndays5_notag
4000/24
#### Fitting ####-----------------------------------------------------------------------------
xarg <- ndays5_notag$Cores
yarg <- ndays5_notag$Throughput
xarg2 <- ndays10_notag$Cores
yarg2 <- ndays10_notag$Throughput
xarg3 <- ndays5_tag$Cores
yarg3 <- ndays5_tag$Throughput
xarg4 <- ndays10_tag$Cores
yarg4 <- ndays10_tag$Throughput
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Cost tagged vs no tags", xlab="Number of cores", ylab="Simulated_years / day ", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
abline(v=c(28,56,84,112,140,168,196, 224), col = "lightgray", lty = "dotted",
lwd=1)
abline(h=seq(2000,14000,4000), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
abline(h=seq(0,2,0.5), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topleft", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(xarg, yarg, df=3)
sspline_5_tag <- smooth.spline(xarg3, yarg3, df=3)
sspline_10_not <- smooth.spline(xarg2, yarg2, df=3)
sspline_10_tag <- smooth.spline(xarg4, yarg4, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Throughput tagged vs no tags", xlab="Number of cores", ylab="Simulated_years / day ", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
abline(v=c(28,56,84,112,140,168,196, 224), col = "lightgray", lty = "dotted",
lwd=1)
abline(h=seq(0,2,0.5), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topleft", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(xarg, yarg, df=3)
sspline_5_tag <- smooth.spline(xarg3, yarg3, df=3)
sspline_10_not <- smooth.spline(xarg2, yarg2, df=3)
sspline_10_tag <- smooth.spline(xarg4, yarg4, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
ndays5_notag
#### Fitting ####-----------------------------------------------------------------------------
xarg <- ndays5_notag$Cores
yarg <- ndays5_notag$Throughput
xarg2 <- ndays10_notag$Cores
yarg2 <- ndays10_notag$Throughput
xarg3 <- ndays5_tag$Cores
yarg3 <- ndays5_tag$Throughput
xarg4 <- ndays10_tag$Cores
yarg4 <- ndays10_tag$Throughput
plot(xarg, yarg, pch=2, type = "p", col="darkblue", ylim=c(min(c(yarg,yarg2, yarg3, yarg4)), max(c(yarg,yarg2, yarg3, yarg4)) ),
main= "Throughput tagged vs no tags", xlab="Number of cores", ylab="Simulated_years / day ", xaxt="n")
axis(1, at=c(28,56,84,112,140,168,196, 224))
abline(v=c(28,56,84,112,140,168,196, 224), col = "lightgray", lty = "dotted",
lwd=1)
abline(h=seq(0,2,0.5), col = "lightgray", lty = "dotted",
lwd=1)
points(xarg2, yarg2, pch=2, type = "p", col="red")
points(xarg3, yarg3, pch=16, type = "p", col="darkblue")
points(xarg4, yarg4, pch=16, type = "p", col="red")
legend("topleft", legend = c("5 days no tags", "10 days no tags", "5 days tagged", "10 days tagged"),
col= c("darkblue", "red", "darkblue", "red"), pch = c(2, 2, 16, 16), bty = "n")
# spline with 3 degrees of freedom
sspline_5_not <- smooth.spline(xarg, yarg, df=3)
sspline_5_tag <- smooth.spline(xarg3, yarg3, df=3)
sspline_10_not <- smooth.spline(xarg2, yarg2, df=3)
sspline_10_tag <- smooth.spline(xarg4, yarg4, df=3)
lines(sspline_10_tag, col="red", lty = 3);
lines(sspline_5_tag, col="darkblue", lty = 3);
lines(sspline_10_not, col="red", lty = 2);
lines(sspline_5_not, col="darkblue", lty = 2)
